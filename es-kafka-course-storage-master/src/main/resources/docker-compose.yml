version: '3.7'
services:
  zookeeper:
    container_name: zk
    image: zookeeper:latest
    healthcheck:
      test: ["CMD", "bash", "-c", "[[ \"$$(exec 3<>/dev/tcp/localhost/2181 && echo ruok >&3 && cat <&3)\" == 'imok' ]] && exit 0 || exit 1"]
      interval: 10s
      timeout: 5s
      # It takes retries consecutive failures of the health check for the container to be considered unhealthy.
      # thus: 10s * 10s = 100s, pretty enough to start ONE zookeeper (even when another services vie for CPU)
      start_period: 10s
      retries: 10
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      HOSTNAME_COMMAND: "echo kafka"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      BROKER_ID_COMMAND: "echo 1"
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: >-
        storage.entity:4:1

  mongo:
    container_name: mongodb
    ports:
      - 27017:27017
    image: mongo:latest
    restart: always

  mongo-express:
    container_name: mongo-client
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081

  es:
    container_name: elasticsearch
    image: elasticsearch:7.5.2
    ports:
      - 9200:9200
    volumes:
      - es:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: >-
        -Xmx512m -Xms512m
      discovery.type: single-node

volumes:
  es: {}